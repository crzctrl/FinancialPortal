@model FinancialPortal.Models.Invitation

@{
    ViewBag.Title = "Create";
}

<div class="page-header">
    <div class="page-block">
        <div class="row align-items-center">
            <div class="col-md-12">
                <div class="page-header-title">
                    <h5 class="m-b-10">Send an invitation</h5>
                </div>
                <ul class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Dashboard", "Home")"><i class="feather icon-home"></i></a></li>
                    <li class="breadcrumb-item">Send an invitation</li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-body">
                <h5>Create your invitation</h5>
                <hr>
                @using (Html.BeginForm())
                {
                    <div class="row">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(m => m.Id)
                        @Html.HiddenFor(m => m.HouseholdId)

                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Send invite to:</label>
                                <input type="email" name="RecipientEmail" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Time to live:</label>
                                <input type="number" name="TTL" class="form-control" placeholder="Self-destruct timer" value="@Model.TTL">
                            </div>
                        </div>
                        <button type="submit" class="btn  btn-primary" style="margin-left: 15px">Send Invite</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- #region Old -->
@*<h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Invitation</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.HouseholdId)

            <div class="form-group">
                    @Html.LabelFor(model => model.HouseholdId, "HouseholdId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("HouseholdId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.HouseholdId, "", new { @class = "text-danger" })
                    </div>
                </div>

            <div class="form-group">
                    @Html.LabelFor(model => model.IsValid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsValid)
                            @Html.ValidationMessageFor(model => model.IsValid, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            <div class="form-group">
                    @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                    </div>
                </div>

            <div class="form-group">
                @Html.Label("Send email to:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RecipientEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RecipientEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TTL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TTL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TTL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Send Invite" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@
<!-- #endregion -->

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}